{"version":3,"sources":["Petal.jsx","App.js","index.js"],"names":["Petal","style","color","num","div","className","classNames","backgroundColor","App","ref","useRef","petals","randomColor","count","luminosity","hue","useTrail","length","index","x","y","springs","set","onClick","current","test3","random","test","test2","map","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAceA,EAVD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7B,OACE,cAAC,IAAEC,IAAH,CAAOH,MAAOA,EAAOI,UAAWC,IAAW,UAAD,WAAgBH,IAA1D,SACE,qBAAKE,UAAS,kBAAaF,GAA3B,SACE,qBAAKF,MAAO,CAAEM,gBAAiBL,GAASG,UAAU,e,MC2B3CG,MA5Bf,WACE,IAAMC,EAAMC,kBAAO,GACbC,EAASC,IAAY,CAAEC,MAAO,GAAIC,WAAY,SAAUC,IAAK,WAFtD,EAGgBC,mBAASL,EAAOM,QAAQ,SAAAC,GAAK,MAAK,CAAEC,EAAG,EAAGC,EAAG,MAH7D,mBAGNC,EAHM,KAGGC,EAHH,KAKb,OALa,KAMX,qBACEjB,UAAU,OACVkB,QAAS,WACP,GAAId,EAAIe,QAAS,CACf,IAAMC,EAAQC,IAAO,EAAG,GAAG,GACrBC,EAAOD,IAAO,EAAG,KAAK,IAAUD,GAAS,EAAI,GAC7CG,EAAQF,IAAO,EAAG,KAAK,IAAUD,GAAS,EAAI,GACpDH,GAAI,SAAAJ,GAAK,MAAK,CAAEC,EAAU,IAAPQ,EAAYP,EAAW,IAARQ,MAClCnB,EAAIe,SAAU,OAEdF,GAAI,SAAAJ,GAAK,MAAK,CAAEC,EAAG,EAAGC,EAAG,MACzBX,EAAIe,SAAU,GAXpB,SAeGH,EAAQQ,KAAI,SAACC,EAAOZ,GAAR,OACX,cAAC,EAAD,CAA2BhB,MAAOS,EAAOO,GAAQjB,MAAO6B,EAAO3B,IAAKe,EAAQ,GAAhEP,EAAOO,UCxB3Ba,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.026560be.chunk.js","sourcesContent":["import { useSpring, a } from 'react-spring';\nimport classNames from 'classnames';\nimport './Petal.css';\n\nconst Petal = ({ style, color, num }) => {\n  return (\n    <a.div style={style} className={classNames('wrapper', `p${num}`)}>\n      <div className={`rotation${num}`}>\n        <div style={{ backgroundColor: color }} className=\"petal\" />\n      </div>\n    </a.div>\n  );\n};\n\nexport default Petal;\n","import { useRef } from 'react';\nimport randomColor from 'randomcolor';\nimport { useTrail } from 'react-spring';\nimport random from 'lodash.random';\nimport Petal from './Petal';\nimport './App.css';\n\nfunction App() {\n  const ref = useRef(true);\n  const petals = randomColor({ count: 22, luminosity: 'bright', hue: 'purple' });\n  const [springs, set, stop] = useTrail(petals.length, index => ({ x: 0, y: 0 }));\n\n  return (\n    <div\n      className=\"main\"\n      onClick={() => {\n        if (ref.current) {\n          const test3 = random(0, 1, false);\n          const test = random(1, 360, false) * (test3 ? -1 : 1);\n          const test2 = random(1, 360, false) * (test3 ? -1 : 1);\n          set(index => ({ x: test * 100, y: test2 * 100 }));\n          ref.current = false;\n        } else {\n          set(index => ({ x: 0, y: 0 }));\n          ref.current = true;\n        }\n      }}\n    >\n      {springs.map((props, index) => (\n        <Petal key={petals[index]} color={petals[index]} style={props} num={index + 1} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}